stop:
          syntax EOF
        | syntax text EOF
        ;

syntax:
          { rule }
        ;

rule:
          misc rules "[\\n\\n]"
          ;

rules:
          ( onerule )+
          ;

onerule:
          rulenumber rulekernel
          ;

rulekernel:
          identifier "::=" expression
        ;
expression:
          term { '|' term }
        ;

term:
          difference { difference | wfc | vc }
        ;

factor:
          multiplicand
        | multiplicand multiplicator
        | '['  expression  ']'
        | '{'  expression  '}'
        ;

multiplicator:
          '*'
        | '+'
        | '?'
        ;

multiplicand:
          primary
        ;


difference:
          factor { '-' factor }
        ;

primary:
          identifier
        | charset
        | quoted_symbol
        | '('  expression  ')'
        ;

text:
          textelement { textelement }
        ;

textelement:
          identifier
        | integer
        | charset
        | wfc
        | vc
        | quoted_symbol
        | "::="
        | "[\\n\\n]"

         | '!'
         | '"'
         | '#'
         | '$'
         | '%'
         | '&'
         | '\\\''
         | '('
         | ')'
         | '*'
         | '+'
         | ','
         | '-'
         | '.'
         | '/'
         | ':'
         | ';'
         | '<'
         | '='
         | '>'
         | '?'
         | '@'
         | '['
         | '\\\\'
         | ']'
         | '^'
         | '_'
         | '`'
         | '{'
         | '|'
         | '}'
        ;

misc:
          [ text ]
        ;

rulenumber:
           "^[ \\t]*\\[[0-9]+[a-z]?\\]"
         ;

charset:
           "#(x|X)[0-9a-fA-F]+"
        | "\\[\\^?(#(x|X)[0-9a-fA-F]+(-#(x|X)[0-9a-fA-F]+)?)+\\]"
        | "\\[\\^?\\]?[^]]*\\]"
        ;

wfc:
          "\\[[ \\t]?(((v|V)(c|C)):[^]]*\\]"
        ;

vc:
          "\\[[ \\t]?((w|W)(f|F)(c|C)):[^]]*\\]"
        ;

quoted_symbol:
          "[\\\"\\'][^\"\\n]*[\\\"\\']"
        ;

integer:
          "[0-9]+"
        ;

identifier:
          "a-zA-Z_(a-zA-Z_|[0-9])*"
        ;

